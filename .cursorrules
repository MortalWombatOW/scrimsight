# .cursorrules

Components & Naming

- Name in PascalCase under `src/components/`.
- Keep them small, typed with interfaces.
- Prioritize readability over brevity.
- Components should have very limited logic, prefer to use atoms and jotai to manage state.
- Components should take as few props as possible, and use atoms to get other data they need that is not passed in props.

Data

- Manage data with Jotai.
- Each atom has its own file in `src/atoms`, in camelCase.
- Almost all atoms are async.
- Each atom file has an output interface defined at the top of the file.
- Use highly readable and logical code to implement atoms, don't be afraid to add comments.
- Do the processing directly, don't use alasql or any other library to process data.
- When using an atom, remember to import its type instead of declaring a new interface.

Icons

- Prefer `Material-UI` icons; name icons in PascalCase.
- Custom icons in `src/components/Icons`.

TypeScript & Syntax

- Strict mode. Avoid `any`.
- Use optional chaining, union types (no enums).
- Export variables directly, don't use `export default`.

File & Folder Names

- Shared types in `src/lib/types.ts`.
- Sort imports (external → internal → sibling → styles).

Additional

- Keep code short; commits semantic.

IMPORTANT:
- When given a task, always restate the task in your own words, and then ask for confirmation.
- Then, provide a few high level options for how to complete the task, and ask for the best option.
- After all changes are made, ALWAYS build the project with `npm run build`. Ignore warnings, fix errors.